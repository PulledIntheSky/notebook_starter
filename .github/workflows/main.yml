name: Docker Puppeteer Screenshots

on:
  push:
    branches:
      - main

jobs:
  run_containers:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step to create empty screenshots directory (if not exists)
      - name: Create screenshots directory
        run: mkdir -p screenshots

      # Step to start Docker containers with Puppeteer and capture screenshots
      - name: Run Docker containers and capture screenshots
        run: |
          for ((i=1; i<=50; i++)); do
            # Start Docker container and capture screenshot
            docker run -d --name container_$i \
              alekzonder/puppeteer:latest \
              bash -c "\
                pwd \
                node -e 'const puppeteer = require(\"puppeteer\"); \
                          (async () => { \
                            const browser = await puppeteer.launch({ headless: true }); \
                            const page = await browser.newPage(); \
                            await page.goto(\"https://www.whatismyipaddress.com\"); \
                            await page.waitForTimeout(8000); // Wait for 8 seconds
                            await page.screenshot({ path: \"screenshot_$i.png\" }); \
                            await browser.close(); \
                            console.log(\"Screenshot captured\"); // Log success
                          })();'"

            # Delay after Puppeteer operations (adjust as necessary)
            sleep 10

            # Check if container exists and is running or stopped
            if docker ps -a --format '{{.Names}}' | grep -Eq "^container_$i$"; then
              # Ensure screenshots directory exists on host
              mkdir -p screenshots/container_$i
              # Copy screenshot from container to host
              docker cp container_$i:/tmp/screenshots/screenshot_$i.png screenshots/container_$i/
              echo "Screenshot copied from container_$i"
            else
              echo "Container container_$i does not exist or is not running."
            fi
          done

      # Step to list screenshots for verification
      - name: List screenshots
        run: ls -R screenshots

      # Step to save screenshots as artifacts if they exist
      - name: Upload Artifacts
        if: success()  # Only run if previous steps were successful
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: screenshots
          if-no-files-found: error  # Fail workflow if no files are found
