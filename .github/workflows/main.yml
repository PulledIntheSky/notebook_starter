name: Docker Selenium Screenshot Test with Ngrok

on:
  push:
    branches:
      - main

jobs:
  run_container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step to install Ngrok
      - name: Install Ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc > /dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt-get update && sudo apt-get install ngrok

      # Step to start Ngrok tunnel
      - name: Start Ngrok Tunnel
        id: ngrok
        run: |
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          nohup ngrok http https://www.whatismyipaddress.com &
          sleep 10
          NGROK_URL=$(curl --silent --show-error http://127.0.0.1:4040/api/tunnels | jq -r .tunnels[0].public_url)
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
          echo "Ngrok tunnel URL: $NGROK_URL"

      # Step to create screenshots directory (if not exists)
      - name: Create screenshots directory
        run: mkdir -p screenshots

      # Step to start a Docker container with Selenium and capture a screenshot
      - name: Run Docker container
        run: |
          docker run -d --name test_container --network host selenium/standalone-chrome:latest bash -c "\
            mkdir -p /tmp/screenshots && \
            sleep 20 && \
            DISPLAY=:99 google-chrome --headless --disable-gpu --no-sandbox --disable-dev-shm-usage --screenshot=/tmp/screenshots/screenshot.png ${NGROK_URL} && \
            cat /tmp/screenshots/screenshot.png && \
            mv /tmp/screenshots/*.png /tmp/screenshots/"
          sleep 30  # Ensure the container has enough time to take the screenshot

      # Step to move screenshot from the container to the host machine
      - name: Move screenshot to host
        run: |
          mkdir -p screenshots/test_container  # Ensure directory exists
          docker cp test_container:/tmp/screenshots/. screenshots/test_container/

      # Step to list screenshots for verification
      - name: List screenshots
        run: ls -R screenshots

      # Step to save screenshots as artifacts if they exist
        - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: screenshots
          if-no-files-found: error  # Fail workflow if no files are found
